version: '2.4'

x-podman:
  in_pod: false

services:
  exopticon:
    build:
      context: ..
      dockerfile: Dockerfile
      target: exopticon-development
    userns_mode: "keep-id:uid=1000,gid=1000"
    environment:
      DATABASE_URL: postgres://postgres:${EXOPTICON_POSTGRES_PASSWORD}@db
      TEST_DATABASE_URL: postgres://postgres:${EXOPTICON_POSTGRES_PASSWORD}@testdb
      ROOT_URL: "https://${DOMAIN}"
      DOMAIN: ${DOMAIN}
      EXOPTICON_NAME: ${EXOPTICON_NAME}
      EXOPTICON_SHORT_NAME: ${EXOPTICON_SHORT_NAME}
      RUST_LOG: ${RUST_LOG}
      EXOPTICON_METRICS_ENABLED: ${EXOPTICON_METRICS_ENABLED}
      EXOPTICON_METRICS_USERNAME: ${EXOPTICON_METRICS_USERNAME}
      EXOPTICON_METRICS_PASSWORD: ${EXOPTICON_METRICS_PASSWORD}
      EXOPTICON_WEBRTC_IPS: ${EXOPTICON_WEBRTC_IPS}
      EXOPTICON_WEBRTC_BUFFER_SIZE: ${EXOPTICON_WEBRTC_BUFFER_SIZE}
      CARGO_TARGET_DIR: /target
      EXOPTICONWORKERS: /target/debug
    ports:
      - 3000:3000
      - "4000:4000/udp"
    restart: always
    devices: []
#      - /dev/apex_0:/dev/apex_0
    volumes:
      - ..:/exopticon:Z # map source directory for development
      - $EXOPTICON_VIDEO_PATH:/video:Z
      - cargo_home:/cargo
      - target:/target
  testdb:
    image: docker.io/pgautoupgrade/pgautoupgrade:17-bookworm
    restart: always
    environment:
      POSTGRES_PASSWORD: ${EXOPTICON_POSTGRES_PASSWORD}
    volumes:
      - test_db:/var/lib/postgresql/data

volumes:
  test_db:
  cargo_home:
  target:
