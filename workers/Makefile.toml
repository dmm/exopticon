[tasks.build-deps]
category = "Build"
command = "cargo"
args = ["build"]

[tasks.build-deps-release]
category = "Build"
command = "cargo"
args = ["build", "--release"]

[tasks.build-workers]
script_runner = "@duckscript"
script = [
'''
cm_run_task cworkers
cm_run_task exopticon
cm_run_task yolov4
cm_run_task frigate
cm_run_task coral
'''
]

[tasks.build]
clear = true
env = { "CARGO_PROFILE" = "debug" }
script_runner = "@duckscript"
script = [
'''
cm_run_task build-deps
cm_run_task build-workers
'''
]

[tasks.build-release]
clear = true
env = { "CARGO_PROFILE" = "release" }
script_runner = "@duckscript"
script = [
'''
cm_run_task build-deps-release
cm_run_task build-workers
'''
]

[tasks.cworkers]
script = [
'''
worker_dir=${CARGO_MAKE_WORKING_DIRECTORY}"/cworkers/"
asset_dir=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"/target/assets/workers/cworkers"

mkdir -p ${asset_dir} || true

export EXWORKER_BINDIR=${asset_dir}
export CARGO_TARGET_DIR=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/${CARGO_PROFILE}

cd ${worker_dir}
make
'''
]

[tasks.exopticon]
script = [
'''
asset_dir=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"/target/assets/workers"

cp ${CARGO_MAKE_WORKING_DIRECTORY}/exopticon.py ${asset_dir}
'''
]


[tasks.yolov4_darknet]
script = [
'''
build_dir=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/darknet
asset_dir=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/assets/workers/yolov4/data
mkdir ${build_dir} || true
cd ${build_dir}
cmake ${CARGO_MAKE_WORKING_DIRECTORY}/yolov4/darknet
make -j4
mkdir -p ${asset_dir} || true
cp ${build_dir}/libdark.so ${asset_dir}
'''
]

[tasks.yolov4_python]
script = [
'''
worker_dir=${CARGO_MAKE_WORKING_DIRECTORY}"/yolov4/"
asset_dir=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"/target/assets/workers/yolov4/"


mkdir -p ${asset_dir}/data/ || true
cp -a ${worker_dir}/data/. ${asset_dir}/data/

# Deploy darknet.py
cp ${worker_dir}/darknet.py ${asset_dir}
'''
]

[tasks.yolov4]
run_task = { name = ["yolov4_python", "yolov4_darknet"] }

[tasks.frigate]
script = [
'''
worker_dir=${CARGO_MAKE_WORKING_DIRECTORY}"/frigate/"
asset_dir=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"/target/assets/workers/frigate/"

mkdir -p ${asset_dir}/data || true

cp -r ${worker_dir}/motion.py ${asset_dir}
cp -r ${worker_dir}/event.py ${asset_dir}
'''
]

[tasks.coral]
script = [
'''
worker_dir=${CARGO_MAKE_WORKING_DIRECTORY}"/coral/"
asset_dir=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"/target/assets/workers/coral/"


mkdir -p ${asset_dir}/data/ || true
cp -a ${worker_dir}/data/. ${asset_dir}/data/

# Deploy coral.py
cp ${worker_dir}/coral.py ${asset_dir}
'''
]

[tasks.watch-web]
disabled = true
